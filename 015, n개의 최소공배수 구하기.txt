/*문제
N개의 최소공배수
두 수의 최소공배수(Least Common Multiple)란 입력된 두 수의 배수 중 공통이 되는 가장 작은 숫자를 의미합니다. 예를 들어 2와 7의 최소공배수는 14가 됩니다. 정의를 확장해서, n개의 수의 최소공배수는 n 개의 수들의 배수 중 공통이 되는 가장 작은 숫자가 됩니다. nlcm 함수를 통해 n개의 숫자가 입력되었을 때, 최소공배수를 반환해 주세요. 예를들어 [2,6,8,14] 가 입력된다면 168을 반환해 주면 됩니다.
*/

##include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

long long gcdlcm(long long a, int b)
{
	long long max = 0; // 최대공약수

	for (int i = 1; i <= b; i++)
	{
		if (a % i == 0 && b % i == 0) max = i;
	}

	long long min = (a * b) / max;// 최소공배수

	return min;
}

long long nlcm(vector<int> num)
{
	sort(num.begin(), num.end());

	long long tmpZero = gcdlcm(num[0], num[1]);

	for (int i = 1; i < num.size(); i++)
	{
		tmpZero = gcdlcm(tmpZero, num[i]);
	}

	return tmpZero;
}

int main()
{
	vector<int> test{2,6,8,14};

	// 아래는 테스트로 출력해 보기 위한 코드입니다.
	cout << nlcm(test);
}

/*
과정 설명
vector에 있음 0, 1 번째의 최소공배수를 구하고 그 값으로 그 뒤로 다음 인덱스에 있는 값과 비교한다.
그리고 또 나온 최소공배수로 다음 값과 비교를 반복 
*/

