/*문제 설명
최대공약수와 최소공배수
두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환해주는 gcdlcm 함수를 완성해 보세요. 배열의 맨 앞에 최대공약수, 그 다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 gcdlcm(3,12) 가 입력되면, [3, 12]를 반환해주면 됩니다.
*/

#include<vector>
#include<iostream>
using namespace std;
vector<int> gcdlcm(int a,int b)
{
  vector<int> answer;
  
  int minValue = ((a < b) ? a : b); 
   
  for(int i = minValue; i > 0; i--)  
  {
      if(a % i == 0 && b % i == 0) 
      {
        answer.push_back(i);
  	answer.push_back((a * b) / answer.back());
        break;
      }
  }
  
  return answer;
}

int main()
{
  int a=3, b=12;
  vector<int> testAnswer = gcdlcm(a,b);

  cout<<testAnswer[0]<<" "<<testAnswer[1];
}

/* 과정 설명
int minValue = ((a < b) ? a : b); //a, b 중에서 작은 수를 구하고 
i = minValue부터 시작해서 1씩 내려가면서 검사한다
if(a % i == 0 && b % i == 0) 조건에 만족하면 '최대공약수'를 구한것이고
'(a * b) / 최대공약수 = 최소공배수'가 나온다
*/

