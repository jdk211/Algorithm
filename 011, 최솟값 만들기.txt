/*문제
최솟값 만들기
자연수로 이루어진 길이가 같은 수열 A,B가 있습니다. 최솟값 만들기는 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱한 값을 누적하여 더합니다. 이러한 과정을 수열의 길이만큼 반복하여 최종적으로 누적된 값이 최소가 되도록 만드는 것이 목표입니다.
예를 들어 A = [1, 2] , B = [3, 4] 라면
1. A에서 1, B에서 4를 뽑아 곱하여 더합니다. 2. A에서 2, B에서 3을 뽑아 곱하여 더합니다.
수열의 길이만큼 반복하여 최솟값 10을 얻을 수 있으며, 이 10이 최솟값이 됩니다.
수열 A,B가 주어질 때, 최솟값을 반환해주는 getMinSum 함수를 완성하세요.
*/

#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

int getMinSum(vector<int> A, vector<int> B)
{
	int answer = 0;
  int arrSize = A.size();
  
  sort(A.begin(), A.end());
  sort(B.begin(), B.end(),greater<int>());
  
  for(int i = 0; i < arrSize; i++)
  {
    answer += (A[i] * B[i]);
  }

	return answer;
}
int main()
{
	vector<int> tA{1,2}, tB{3,4};

	//아래는 테스트 출력을 위한 코드입니다.
	cout<<getMinSum(tA,tB);
}

/*
과정 설명
한쪽 배열에서 작은값을 다른쪽 배열에서 큰값과 곱하기를 반복하면 최소값이 나온다.
그러므로, 두 배열을 모두 정렬하는데 내림차순, 올림차순으로 따로 정렬하고 같은 인덱스를 가진 값끼리 곱해서 더해준다.
*/

